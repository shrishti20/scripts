const jmswapRouter = {
  abi: [
    {
      inputs: [
        { name: "_factory", type: "address" },
        { name: "_WBASE", type: "address" },
      ],
      stateMutability: "Nonpayable",
      type: "Constructor",
    },
    { stateMutability: "Payable", type: "Fallback" },
    {
      outputs: [{ type: "address" }],
      name: "WBASE",
      stateMutability: "View",
      type: "Function",
    },
    {
      outputs: [
        { name: "amountA", type: "uint256" },
        { name: "amountB", type: "uint256" },
        { name: "liquidity", type: "uint256" },
      ],
      inputs: [
        { name: "tokenA", type: "address" },
        { name: "tokenB", type: "address" },
        { name: "amountADesired", type: "uint256" },
        { name: "amountBDesired", type: "uint256" },
        { name: "amountAMin", type: "uint256" },
        { name: "amountBMin", type: "uint256" },
        { name: "to", type: "address" },
        { name: "deadline", type: "uint256" },
      ],
      name: "addLiquidity",
      stateMutability: "Nonpayable",
      type: "Function",
    },
    {
      outputs: [
        { name: "amountToken", type: "uint256" },
        { name: "amountBase", type: "uint256" },
        { name: "liquidity", type: "uint256" },
      ],
      inputs: [
        { name: "token", type: "address" },
        { name: "amountTokenDesired", type: "uint256" },
        { name: "amountTokenMin", type: "uint256" },
        { name: "amountBaseMin", type: "uint256" },
        { name: "to", type: "address" },
        { name: "deadline", type: "uint256" },
      ],
      name: "addLiquidityBase",
      stateMutability: "Payable",
      type: "Function",
    },
    {
      outputs: [
        { name: "amountB", type: "uint256" },
        { name: "share", type: "uint256" },
      ],
      inputs: [
        { name: "amountA", type: "uint256" },
        { name: "tokenA", type: "address" },
        { name: "tokenB", type: "address" },
        { name: "reverse", type: "bool" },
      ],
      name: "calcPairLiquidity",
      stateMutability: "View",
      type: "Function",
    },
    {
      outputs: [{ type: "address" }],
      name: "factory",
      stateMutability: "View",
      type: "Function",
    },
    {
      outputs: [{ name: "amountIn", type: "uint256" }],
      inputs: [
        { name: "amountOut", type: "uint256" },
        { name: "reserveIn", type: "uint256" },
        { name: "reserveOut", type: "uint256" },
      ],
      name: "getAmountIn",
      stateMutability: "Pure",
      type: "Function",
    },
    {
      outputs: [{ name: "amountOut", type: "uint256" }],
      inputs: [
        { name: "amountIn", type: "uint256" },
        { name: "reserveIn", type: "uint256" },
        { name: "reserveOut", type: "uint256" },
      ],
      name: "getAmountOut",
      stateMutability: "Pure",
      type: "Function",
    },
    {
      outputs: [{ name: "amounts", type: "uint256[]" }],
      inputs: [
        { name: "amountOut", type: "uint256" },
        { name: "path", type: "address[]" },
      ],
      name: "getAmountsIn",
      stateMutability: "View",
      type: "Function",
    },
    {
      outputs: [{ name: "amounts", type: "uint256[]" }],
      inputs: [
        { name: "amountOut", type: "uint256" },
        { name: "path", type: "address[]" },
        { name: "taxes", type: "bytes32[]" },
      ],
      name: "getAmountsInTaxed",
      stateMutability: "View",
      type: "Function",
    },
    {
      outputs: [{ name: "amounts", type: "uint256[]" }],
      inputs: [
        { name: "amountIn", type: "uint256" },
        { name: "path", type: "address[]" },
      ],
      name: "getAmountsOut",
      stateMutability: "View",
      type: "Function",
    },
    {
      outputs: [{ name: "amounts", type: "uint256[]" }],
      inputs: [
        { name: "amountIn", type: "uint256" },
        { name: "path", type: "address[]" },
        { name: "taxes", type: "bytes32[]" },
      ],
      name: "getAmountsOutTaxed",
      stateMutability: "View",
      type: "Function",
    },
    {
      outputs: [
        { name: "balanceTokenA", type: "uint256" },
        { name: "balanceTokenB", type: "uint256" },
      ],
      inputs: [
        { name: "tokenA", type: "address" },
        { name: "tokenB", type: "address" },
      ],
      name: "getPairBalance",
      stateMutability: "View",
      type: "Function",
    },
    {
      outputs: [
        { name: "totalSupply", type: "uint256" },
        { name: "userSupply", type: "uint256" },
        { name: "userShare", type: "uint256" },
      ],
      inputs: [
        { name: "user", type: "address" },
        { name: "tokenA", type: "address" },
        { name: "tokenB", type: "address" },
      ],
      name: "getUserLP",
      stateMutability: "View",
      type: "Function",
    },
    {
      outputs: [
        { name: "totalSupply", type: "uint256" },
        { name: "userSupply", type: "uint256" },
        { name: "userShare", type: "uint256" },
      ],
      inputs: [
        { name: "user", type: "address" },
        { name: "pair", type: "address" },
      ],
      name: "getUserLPwithPair",
      stateMutability: "View",
      type: "Function",
    },
    {
      outputs: [{ name: "amountB", type: "uint256" }],
      inputs: [
        { name: "amountA", type: "uint256" },
        { name: "reserveA", type: "uint256" },
        { name: "reserveB", type: "uint256" },
      ],
      name: "quote",
      stateMutability: "Pure",
      type: "Function",
    },
    {
      outputs: [
        { name: "amountA", type: "uint256" },
        { name: "amountB", type: "uint256" },
      ],
      inputs: [
        { name: "tokenA", type: "address" },
        { name: "tokenB", type: "address" },
        { name: "liquidity", type: "uint256" },
        { name: "amountAMin", type: "uint256" },
        { name: "amountBMin", type: "uint256" },
        { name: "to", type: "address" },
        { name: "deadline", type: "uint256" },
      ],
      name: "removeLiquidity",
      stateMutability: "Nonpayable",
      type: "Function",
    },
    {
      outputs: [
        { name: "amountToken", type: "uint256" },
        { name: "amountBase", type: "uint256" },
      ],
      inputs: [
        { name: "token", type: "address" },
        { name: "liquidity", type: "uint256" },
        { name: "amountTokenMin", type: "uint256" },
        { name: "amountBaseMin", type: "uint256" },
        { name: "to", type: "address" },
        { name: "deadline", type: "uint256" },
      ],
      name: "removeLiquidityBase",
      stateMutability: "Nonpayable",
      type: "Function",
    },
    {
      outputs: [{ name: "amountBase", type: "uint256" }],
      inputs: [
        { name: "token", type: "address" },
        { name: "liquidity", type: "uint256" },
        { name: "amountTokenMin", type: "uint256" },
        { name: "amountBaseMin", type: "uint256" },
        { name: "to", type: "address" },
        { name: "deadline", type: "uint256" },
      ],
      name: "removeLiquidityBaseSupportingFeeOnTransferTokens",
      stateMutability: "Nonpayable",
      type: "Function",
    },
    {
      outputs: [{ name: "amounts", type: "uint256[]" }],
      inputs: [
        { name: "amountOut", type: "uint256" },
        { name: "path", type: "address[]" },
        { name: "taxes", type: "bytes32[]" },
        { name: "to", type: "address" },
        { name: "deadline", type: "uint256" },
      ],
      name: "swapBaseForExactTokens",
      stateMutability: "Payable",
      type: "Function",
    },
    {
      outputs: [{ name: "amounts", type: "uint256[]" }],
      inputs: [
        { name: "amountOutMin", type: "uint256" },
        { name: "path", type: "address[]" },
        { name: "taxes", type: "bytes32[]" },
        { name: "to", type: "address" },
        { name: "deadline", type: "uint256" },
      ],
      name: "swapExactBaseForTokens",
      stateMutability: "Payable",
      type: "Function",
    },
    {
      outputs: [{ name: "amounts", type: "uint256[]" }],
      inputs: [
        { name: "amountIn", type: "uint256" },
        { name: "amountOutMin", type: "uint256" },
        { name: "path", type: "address[]" },
        { name: "taxes", type: "bytes32[]" },
        { name: "to", type: "address" },
        { name: "deadline", type: "uint256" },
      ],
      name: "swapExactTokensForBase",
      stateMutability: "Nonpayable",
      type: "Function",
    },
    {
      outputs: [{ name: "amounts", type: "uint256[]" }],
      inputs: [
        { name: "amountIn", type: "uint256" },
        { name: "amountOutMin", type: "uint256" },
        { name: "path", type: "address[]" },
        { name: "taxes", type: "bytes32[]" },
        { name: "to", type: "address" },
        { name: "deadline", type: "uint256" },
      ],
      name: "swapExactTokensForTokens",
      stateMutability: "Nonpayable",
      type: "Function",
    },
    {
      outputs: [{ name: "amounts", type: "uint256[]" }],
      inputs: [
        { name: "amountOut", type: "uint256" },
        { name: "amountInMax", type: "uint256" },
        { name: "path", type: "address[]" },
        { name: "taxes", type: "bytes32[]" },
        { name: "to", type: "address" },
        { name: "deadline", type: "uint256" },
      ],
      name: "swapTokensForExactBase",
      stateMutability: "Nonpayable",
      type: "Function",
    },
    {
      outputs: [{ name: "amounts", type: "uint256[]" }],
      inputs: [
        { name: "amountOut", type: "uint256" },
        { name: "amountInMax", type: "uint256" },
        { name: "path", type: "address[]" },
        { name: "taxes", type: "bytes32[]" },
        { name: "to", type: "address" },
        { name: "deadline", type: "uint256" },
      ],
      name: "swapTokensForExactTokens",
      stateMutability: "Nonpayable",
      type: "Function",
    },
    {
      inputs: [{ name: "pair", type: "address" }],
      name: "syncPair",
      stateMutability: "Nonpayable",
      type: "Function",
    },
  ],
  "factoryAddress":"TBfTeNjh7k8PbkTad8z6WS2vqh7SQZUfQ8",
  "routerAddress":"TFP85wsQ5sdhDkYTvwn3e12pNZEfjVerPp"
};

module.exports = jmswapRouter;
